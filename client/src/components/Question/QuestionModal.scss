// src/components/QuestionModal.scss

@use "sass:color";

// Variáveis de cor
$primary-bg: #1e1b4b;
$secondary-bg: #ff3d81;
$tertiary-bg: #ffd600;
$text-light: #ffffff;
$text-dark: #2d2d2d;
$overlay-bg: rgba(30, 27, 75, 0.85);
$btn-hover-scale: 1.05;

// Overlay com fundo vibrante
.ReactModal__Overlay {
  background-color: $overlay-bg !important;
  display: flex !important;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

// Conteúdo do modal com degrade e borda animada
.ReactModal__Content {
  position: relative !important;
  inset: auto !important;
  width: 90% !important;
  max-width: 420px;
  padding: 2rem;
  background: linear-gradient(
    135deg,
    $primary-bg 0%,
    color.adjust($primary-bg, $lightness: -10%) 100%
  );
  border: 4px solid transparent;
  border-radius: 12px;
  background-clip: padding-box;
  box-shadow: 
    0 0 20px rgba(255, 61, 129, 0.6),
    0 0 40px rgba(255, 214, 0, 0.4);
  color: $text-light;
  overflow: hidden;

  // Animação de borda colorida
  &::before {
    content: "";
    position: absolute;
    top: -4px; left: -4px; right: -4px; bottom: -4px;
    background: conic-gradient(
      from 90deg,
      #ff3d81,
      #ffd600,
      #00ffe7,
      #ff3d81
    );
    z-index: -1;
    animation: rotate-border 4s linear infinite;
  }
}

@keyframes rotate-border {
  to { transform: rotate(360deg); }
}

// Título com texto em camadas
.ReactModal__Content h2 {
  margin: 0 0 1rem;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  color: $secondary-bg;

  &::after {
    content: attr(data-text);
    position: absolute;
    top: 2px; left: 2px;
    color: $tertiary-bg;
    z-index: -1;
    opacity: 0.6;
  }
}

// Texto da pergunta
.ReactModal__Content p {
  margin-bottom: 1.5rem;
  line-height: 1.6;
  font-size: 1.1rem;
  color: black;
}

// Lista de opções
.ReactModal__Content ul {
  list-style: none;
  padding: 0;
  margin: 0 0 1.5rem;
}

.ReactModal__Content li + li {
  margin-top: 1rem;
}

// Botões de opção com efeito “pulse” e degrade
.ReactModal__Content ul li button {
  width: 100%;
  padding: 0.75rem;
  font-size: 1rem;
  border: none;
  border-radius: 6px;
  background: linear-gradient(45deg, $secondary-bg, $tertiary-bg);
  color: $text-dark;
  font-weight: bold;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s;

  // Sombra vibrante
  box-shadow: 
    0 4px 10px rgba(255, 61, 129, 0.4),
    0 4px 10px rgba(255, 214, 0, 0.3);

  &:hover {
    transform: scale($btn-hover-scale);
    box-shadow: 
      0 6px 14px rgba(255, 61, 129, 0.6),
      0 6px 14px rgba(255, 214, 0, 0.5);
  }

  // Efeito pulse contínuo
  &::after {
    content: "";
    position: absolute;
    top: 50%; left: 50%;
    width: 0; height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: pulse 2s infinite;
  }
}

@keyframes pulse {
  0% {
    width: 0; height: 0; opacity: 0.7;
  }
  50% {
    width: 200%; height: 200%; opacity: 0;
  }
  100% {
    width: 0; height: 0; opacity: 0;
  }
}

// Botão de cancelar com borda neon
.ReactModal__Content > button {
  display: block;
  width: 100%;
  padding: 0.6rem;
  margin-top: 1rem;
  font-size: 1rem;
  background: transparent;
  border: 2px solid $tertiary-bg;
  border-radius: 6px;
  color: $tertiary-bg;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.3s, color 0.3s, box-shadow 0.3s;

  &:hover {
    background: $tertiary-bg;
    color: $text-dark;
    box-shadow: 0 0 8px $tertiary-bg, 0 0 16px $tertiary-bg;
  }
}
